--
-- This scripts sets up the IBM DB2 Federation Hyperledger Fabric wrapper demo 
--   using the remote insurance app set on the bigsql-fabric1.fyre.ibm.com server
--

-- Registering the Wrapper

CREATE WRAPPER fabric LIBRARY 'libdb2qgjava.so'
OPTIONS (

    -- Our Wrapper class

    UNFENCED_WRAPPER_CLASS      'com.ibm.federation.fabric.unfenced.FabricUnfencedWrapper',

    -- A KMS Connector to retrieve the crypto artefacts used to access the ledger
    --
    -- It can be one of our current KMS Connector implementations:
    -- 1) CRYPTOGEN_FS_KMS  - A KMS using the file structure generated by the Fabric cryptogen tool on the instance local file system
    -- 2) COMPOSER_FS_KMS   - A KMS using a Hyperledger Composer business card stored on the instance local file system
    -- 3) CUSTOM_FS_KMS     - A KMS allowing to pass explicit cert & key files stored on the instance local file system
    -- 4) NODE_KVS_FS_KMS   - A KMS using the file structure generated by the Node.js SDK fileSystem KVS on the instance local file system

    KMS_CONNECTOR               'CRYPTOGEN_FS_KMS'
);

-- Creating the Server
--   (representing a peer on the Blockchain network we're connecting to)

CREATE SERVER shop_peer WRAPPER fabric
OPTIONS (

    -- The details of the Hyperledger Fabric peer we are connecting to

    PEER_URL                    'grpcs://shop-peer:7051',
    PEER_TLS_CA_CERT_FILE       '/certs/shop-org/peers/shop-peer/tls/ca.crt',
    PEER_TLS_HOSTNAME_OVERRIDE  'shop-peer',

    -- The parameters for the KMS Connector chosen when creating the Wrapper

    KMS_FS_MSP_ID               'ShopOrgMSP',
    KMS_FS_CRYPTOGEN_ORG_ROOT   '/certs/shop-org'
);

-- Create the User Mapping to specify which credentials will be used to access the blokchain

CREATE USER MAPPING FOR USER SERVER shop_peer
OPTIONS (
    REMOTE_AUTHID               'Admin'
);

-- Create the Nicknames to access the Blocks & Transactions as local tables

CREATE NICKNAME nn_blocks FOR shop_peer.default.blocks;
CREATE NICKNAME nn_tx FOR shop_peer.default.transactions;
